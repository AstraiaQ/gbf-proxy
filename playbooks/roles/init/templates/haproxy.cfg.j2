global
  pidfile {{ haproxy_pid }}
  maxconn 50000
  log 127.0.0.1:514 local0 info
  user haproxy
  group haproxy
  stats socket {{ haproxy_sock }} user haproxy group haproxy mode 660 level admin
  ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
  ssl-default-bind-ciphers EECDH+AESGCM:EDH+AESGCM
  tune.ssl.default-dh-param 2048

defaults
  timeout connect 10s
  timeout client 30s
  timeout server 30s
  log global
  mode http
  option httplog
  option forwardfor

frontend http-frontend
  bind *:80
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request set-header X-Forwarded-Scheme http
  default_backend proxy-servers

frontend https-frontend
  bind *:443 ssl crt {{ haproxy_cert }} ciphers EECDH+AESGCM:EDH+AESGCM no-sslv3 no-tlsv10 no-tlsv11
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request set-header X-Forwarded-Scheme https
  default_backend proxy-servers

frontend alt-frontend
  bind *:8088
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request set-header X-Forwarded-Scheme http
  default_backend proxy-servers

backend proxy-servers
  balance roundrobin
  option httpchk GET /healthcheck HTTP/1.1\r\nHost:\ {{ hostname }}
  default-server maxconn 1000
{% for name in server_names %}
  server {{ name }} unix@{{ server_dir }}/{{ name }}.sock check
{% endfor %}

listen stats
  bind :9000
  mode http
  stats enable
  stats uri /
  stats refresh 2s
  stats admin if LOCALHOST
