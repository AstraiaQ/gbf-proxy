// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import bufio "bufio"
import http "net/http"
import mock "github.com/stretchr/testify/mock"
import net "net"

// ResponseWriter is an autogenerated mock type for the ResponseWriter type
type ResponseWriter struct {
	mock.Mock
}

// Header provides a mock function with given fields:
func (_m *ResponseWriter) Header() http.Header {
	ret := _m.Called()

	var r0 http.Header
	if rf, ok := ret.Get(0).(func() http.Header); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.Header)
		}
	}

	return r0
}

// Hijack provides a mock function with given fields:
func (_m *ResponseWriter) Hijack() (net.Conn, *bufio.ReadWriter, error) {
	ret := _m.Called()

	var r0 net.Conn
	if rf, ok := ret.Get(0).(func() net.Conn); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(net.Conn)
		}
	}

	var r1 *bufio.ReadWriter
	if rf, ok := ret.Get(1).(func() *bufio.ReadWriter); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*bufio.ReadWriter)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// Write provides a mock function with given fields: _a0
func (_m *ResponseWriter) Write(_a0 []byte) (int, error) {
	ret := _m.Called(_a0)

	var r0 int
	if rf, ok := ret.Get(0).(func([]byte) int); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// WriteHeader provides a mock function with given fields: statusCode
func (_m *ResponseWriter) WriteHeader(statusCode int) {
	_m.Called(statusCode)
}
